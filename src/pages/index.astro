---
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import LinkButton from "@components/LinkButton.astro";
import Hr from "@components/Hr.astro";
import Card from "@components/Card";
import Socials from "@components/Socials.astro";
import getSortedPosts from "@utils/getSortedPosts";
import { SITE, SOCIALS } from "@config";

const posts = await getCollection("blog");

const sortedPosts = getSortedPosts(posts);
const featuredPosts = sortedPosts.filter(({ data }) => data.featured);
const recentPosts = sortedPosts.filter(({ data }) => !data.featured);

const socialCount = SOCIALS.filter(social => social.active).length;
---

<Layout>
  <Header />
  <main id="main-content">
    <section id="hero">
      <div class="greeting-container">
        <h1 id="greeting">Welcome!</h1>
      </div>
      <p>
        My name is Jesse. I'm a software engineer and I create things. This is a
        place to share my findings/thoughts on a variety of topics
      </p>
      {
        // only display if at least one social link is enabled
        socialCount > 0 && (
          <div class="social-wrapper">
            <div class="social-links">Social Links:</div>
            <Socials />
          </div>
        )
      }
    </section>

    <Hr />

    {
      featuredPosts.length > 0 && (
        <>
          <section id="featured">
            <h2>Featured</h2>
            <ul>
              {featuredPosts.map(({ data, slug }) => (
                <Card
                  href={`/posts/${slug}/`}
                  frontmatter={data}
                  secHeading={false}
                />
              ))}
            </ul>
          </section>
          {recentPosts.length > 0 && <Hr />}
        </>
      )
    }

    {
      recentPosts.length > 0 && (
        <section id="recent-posts">
          <h2>Recent Posts</h2>
          <ul>
            {recentPosts.map(
              ({ data, slug }, index) =>
                index < SITE.postPerIndex && (
                  <Card
                    href={`/posts/${slug}/`}
                    frontmatter={data}
                    secHeading={false}
                  />
                )
            )}
          </ul>
        </section>
      )
    }

    <div class="all-posts-btn-wrapper">
      <LinkButton href="/posts/">
        All Posts
        <svg xmlns="http://www.w3.org/2000/svg"
          ><path
            d="m11.293 17.293 1.414 1.414L19.414 12l-6.707-6.707-1.414 1.414L15.586 11H6v2h9.586z"
          ></path>
        </svg>
      </LinkButton>
    </div>
  </main>

  <Footer />
</Layout>

<style>
  /* ===== Hero Section ===== */
  #hero {
    @apply pb-6 pt-8;
  }
  #hero h1 {
    @apply my-4 inline-block text-3xl font-bold sm:my-8 sm:text-5xl;
  }
  #hero .rss-link {
    @apply mb-6;
  }
  #hero .rss-icon {
    @apply mb-2 h-6 w-6 scale-110 fill-skin-accent sm:mb-3 sm:scale-125;
  }
  #hero p {
    @apply my-2;
  }
  .social-wrapper {
    @apply mt-4 flex flex-col sm:flex-row sm:items-center;
  }
  .social-links {
    @apply mb-1 mr-2 whitespace-nowrap sm:mb-0;
  }

  /* ===== Featured & Recent Posts Sections ===== */
  #featured,
  #recent-posts {
    @apply pb-6 pt-12;
  }
  #featured h2,
  #recent-posts h2 {
    @apply text-2xl font-semibold tracking-wide;
  }
  .all-posts-btn-wrapper {
    @apply my-8 text-center;
  }

  .greeting-container {
    height: 85px;
    overflow: hidden;
    position: relative;
    padding-bottom: 10px;
  }

  #greeting {
    position: absolute;
    width: 100%;
    margin: 0;
    height: 100%;
    display: flex;
    align-items: center;
    opacity: 1;
  }

  .slide-up {
    animation: slideUp 0.5s ease-in-out;
  }

  .slide-in {
    animation: slideIn 0.5s ease-in-out;
  }

  @keyframes slideUp {
    0% {
      transform: translateY(0);
      opacity: 1;
    }
    100% {
      transform: translateY(-100%);
      opacity: 0;
    }
  }

  @keyframes slideIn {
    0% {
      transform: translateY(50%);
      opacity: 0;
    }
    100% {
      transform: translateY(0);
      opacity: 1;
    }
  }
</style>

<script>
  // "Welcome!" is added at the end to ensure it is a loop, since we need to define a greeting at the start of page load
  const greetings = [
    "Bienvenido!",
    "Willkommen!",
    "Mingalaba!",
    "こんにちは!",
    "Welcome!",
  ];

  const greetingElement = document.getElementById("greeting");
  let currentIndex = 0;

  function updateGreeting() {
    const nextIndex = (currentIndex + 1) % greetings.length;
    if (!greetingElement) return;
    if (greetings[nextIndex] === greetingElement.textContent) {
      return;
    }

    greetingElement.classList.add("slide-up");

    setTimeout(() => {
      currentIndex = nextIndex;
      greetingElement.textContent = greetings[currentIndex];
      greetingElement.classList.remove("slide-up");
      greetingElement.classList.add("slide-in");

      setTimeout(() => {
        greetingElement.classList.remove("slide-in");
      }, 500);
    }, 450);
  }

  setInterval(updateGreeting, 3000);
</script>
